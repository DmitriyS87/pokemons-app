{"version":3,"sources":["components/checkbox-tag.js","components/checkbox-labels.js","components/search-input.js","components/table/table-header.js","components/table/table-pagination.js","components/table/table-toolbar.js","components/type-tag.js","components/pokemon.js","components/table/table-body.js","components/table/table.js","services/data-parcer.js","services/Api.js","stores/app-store.js","App.js","serviceWorker.js","index.js"],"names":["CheckboxTag","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleChange","event","setState","isChecked","state","color","sameColor","baseColor","backgroundcolor","onChangeCallback","target","name","labelContainerStyle","padding","margin","borderRadius","backgroundColor","cursor","labelStyle","display","alignItems","react_default","a","createElement","style","index_es","labelText","type","checked","onChange","React","Component","TYPES_MAP","Map","names","makeInitialState","innitialState","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","next","done","value","push","err","return","styles","root","green","&$checked","CheckboxLabels","handleClick","bind","assertThisInitialized","store","_filterByTags","_this2","FormGroup_default","row","flexWrap","alignContent","map","index","checkbox_tag","key","get","withStyles","inject","SearchInput","term","placeholder","handleChange","onFocusHandler","onBlurHandler","searchTerm","onFocus","onBlur","rows","id","disablePadding","label","EnhancedTableHead","createChangeHandler","property","onChangeInputHandler","TableHead_default","TableRow_default","TableCell_default","align","search_input","onChangeHandler","TablePaginationCustom","handleChangePage","page","currentPage","handleChangeRowsPerPage","rowsPerPage","MaterialPagination","TablePagination","rowsCount","count","pokemonsCount","rowsPerPageOptions","component","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","observer","theme","paddingRight","spacing","unit","spacer","flex","title","classes","Toolbar_default","className","Typography_default","variant","TypeTag","STATS_SEQUENCE","Pokemon","dataLoaded","data","isLoaded","Fragment","Avatar_default","alt","src","avatar","stat","types","type_tag","prevProps","_this3","item","getPokemonData","then","self","scope","dataCells","PokemonsTable","TableBody_default","displayList","slice","pokemon","hover","tabIndex","components_pokemon","PokemonsBoard","Paper_default","table_toolbar","checkbox_labels","tableWrapper","Table_default","table","aria-labelledby","table_header","table_body","table_pagination","width","marginTop","marginLeft","minWidth","overflowX","DataParser","String","forEach","dataStat","stats","find","it","setTypes","array","parsePokemon","P","Pocedex","services_Api","Api","getTypesList","catch","e","console","log","url","resource","getPokemonsList","Error","INIT_ROWS_PER_PAGE","INIT_PAGE","Store","tagsList","pokemonsList","screenPokemons","selectedTags","pokemonsTagsSelected","_init","list","splice","tagsStore","_i","_Object$keys","length","tag","tags","newTagIndex","indexOf","filter","createFilter","result","Promise","resolve","exportPokemonsData","tableListLength","_spliceToTablePage","newTerm","_this4","filterTags","tagList","getPromiseList","onTagsLists","onErrorList","pokemons","lists","response","filtredByTagsPokemons","_comparePokemonsLists","error","_this5","pokemonsLists","_loadPokemonsWithTag","setTagsList","arrayPromises","all","pokemonsByTags","_ref","sortedAllPokemons","collection","sortBy","concat","apply","toConsumableArray","o","arrayLodash","sortedUniqBy","compact","_index","_ref2","api","pokemonData","currentPokemonData","sprites","front_default","DataParcer","loadPokemonData","_this6","_loadTypesList","results","_setPokimonsByTags","_loadPokemonsList","_onSuccessPokemons","_onErrorPokemons","Array","from","offset","getTypePokemons","getTypes","_this7","pokemonsWithData","storedData","storedPokemons","stroredPokemon","decorate","observable","ref","currentTagsLists","computed","tagFilterEnabled","pokemonsLength","action","bound","App","stores","index_module","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f92c475.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CheckboxTag extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.baseColor = this.props.color;\r\n      this.sameColor = 'white';\r\n      this.state = {\r\n        isChecked: true,\r\n        color: this.baseColor,\r\n        backgroundcolor: this.sameColor,\r\n      };\r\n  }\r\n\r\n  toggleChange = (event) => {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked,\r\n      color: this.state.isChecked ? this.sameColor : this.baseColor,\r\n      backgroundcolor: this.state.isChecked ? this.baseColor : this.sameColor,\r\n    });\r\n    this.props.onChangeCallback(event.target.name);\r\n  }\r\n\r\n  render() {\r\n    const labelContainerStyle = {\r\n        padding: '5px 10px 5px 10px',\r\n        margin: '5px',\r\n        borderRadius: '15px',\r\n        backgroundColor: this.state.backgroundcolor,\r\n        cursor: \"pointer\"\r\n      }\r\n\r\n      const labelStyle = {\r\n        display: \"flex\", \r\n        alignItems: 'center',\r\n        color: this.state.color,\r\n        cursor: \"pointer\"\r\n      }\r\n\r\n      return <div style={labelContainerStyle}><label style={labelStyle}>\r\n        <Input name={this.props.labelText} type=\"checkbox\" style={{display: \"none\"}} checked={this.state.isChecked} onChange={this.toggleChange}/>\r\n        {this.props.labelText}\r\n        </label>\r\n        </div>\r\n  }\r\n}\r\n\r\nCheckboxTag.propTypes = {\r\n  labelText: PropTypes.string.isRequired,\r\n  onChangeCallback: PropTypes.func.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CheckboxTag;\r\n\r\n","import React from 'react';\r\nimport { inject } from 'mobx-react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport CheckboxTag from './checkbox-tag'\r\n\r\n\r\nconst TYPES_MAP = new Map([\r\n    [\"normal\" , \"Silver\"], \r\n    [\"fighting\" , \"YellowGreen\"],\r\n    [\"flying\" , \"Fuchsia\"],\r\n    [\"poison\" , \"Purple\"],\r\n    [\"ground\" , \"Red\"],\r\n    [\"rock\" , \"Maroon\"],\r\n    [\"bug\" , \"Yellow\"],\r\n    [\"ghost\" , \"Olive\"],\r\n    [\"steel\" , \"Lime\"],\r\n    [\"fire\"  , \"Green\"],\r\n    [\"water\"  , \"Aqua\"],\r\n    [\"grass\"  , \"Teal\"],\r\n    [\"electric\"  , \"Blue\"],\r\n    [\"psychic\"  , \"Navy\"],\r\n    [\"ice\"  , \"Chocolate\"],\r\n    [\"dragon\"  , \"DarkGoldenRod\"],\r\n    [\"dark\"  , \"DarkSlateBlue\"],\r\n    [\"fairy\"  , \"OrangeRed\"],\r\n    [\"unknown\" , \"DarkSlateGray\"],\r\n    [\"shadow\" , \"Gray\"]\r\n]);\r\n\r\n\r\nconst names = [];\r\nconst makeInitialState = () => {\r\n  const innitialState = {};   \r\n\r\n  for(let name of TYPES_MAP.keys()) {\r\n    innitialState[name] = true;\r\n    names.push(name);\r\n}\r\nreturn innitialState;\r\n};\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    color: green[600],\r\n    '&$checked': {\r\n      color: green[500],\r\n    },\r\n  },\r\n  checked: {\r\n  }\r\n};\r\n\r\nclass CheckboxLabels extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = makeInitialState();\r\n    \r\n    this.handleClick = this.handleClick.bind(this);\r\n}\r\n\r\n  handleClick(name) {\r\n    this.props.store._filterByTags(name);\r\n  }\r\n\r\n  render() {\r\n    const tagsContainerStyles = {\r\n      padding: '5px 10px 5px 10px',\r\n      display: 'flex', \r\n      flexWrap: 'wrap',\r\n      alignContent: 'space-between',\r\n    }\r\n      \r\n    return ( \r\n      <FormGroup row>\r\n      <div style={tagsContainerStyles}>\r\n      {names.map((name, index) => {\r\n        return <CheckboxTag\r\n          key={'checkbox' + index}\r\n          labelText={name}\r\n          onChangeCallback={this.handleClick}\r\n          color={TYPES_MAP.get(name)}\r\n        />\r\n      })\r\n      }\r\n      </div>\r\n      </FormGroup>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(inject('store')(CheckboxLabels));","import React from 'react';\r\nimport { inject } from 'mobx-react';\r\n\r\n\r\nclass SearchInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {term: '', placeholder: 'Name'};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onFocusHandler = this.onFocusHandler.bind(this);\r\n    this.onBlurHandler = this.onBlurHandler.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const term = event.target.value;\r\n    this.props.store.searchTerm = term;\r\n    this.setState({ term });\r\n  }\r\n\r\n  onFocusHandler() {\r\n    this.setState({placeholder: ''});\r\n  }\r\n\r\n  onBlurHandler() {\r\n    this.setState({placeholder: 'Name'});\r\n  }\r\n\r\n  render() {\r\n      return <input type=\"text\" name=\"name\" value={this.state.term} placeholder={this.state.placeholder} onChange={this.handleChange} onFocus={this.onFocusHandler} onBlur={this.onBlurHandler}/>\r\n  }\r\n}\r\n\r\nexport default inject('store')(SearchInput);","import React from 'react';\r\n\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport SearchInput from '../search-input';\r\n\r\nconst rows = [\r\n    { id: 'image', disablePadding: true, label: 'Avatar' },\r\n    { id: 'hp', disablePadding: true, label: 'Hp' },\r\n    { id: 'attack', disablePadding: true, label: 'Attack' },\r\n    { id: 'defense', disablePadding: true, label: 'Defense' },\r\n    { id: 'special-attack', disablePadding: true, label: 'Special Att' },\r\n    { id: 'special-defense', disablePadding: true, label: 'Special Def' },\r\n    { id: 'speed', disablePadding: true, label: 'Speed' },\r\n    { id: 'accuracy', disablePadding: true, label: 'Accuracy' },\r\n    { id: 'evasion', disablePadding: true, label: 'Evasion' },\r\n    { id: 'types', disablePadding: false, label: 'Types' },\r\n  ];\r\n  \r\n  class EnhancedTableHead extends React.Component {\r\n    createChangeHandler = property => event => {\r\n      this.props.onChangeInputHandler(event, property);\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <TableHead >\r\n          <TableRow>\r\n            <TableCell\r\n              key=\"name\"\r\n              align=\"left\"\r\n              padding=\"default\"\r\n            >\r\n            <SearchInput onChangeHandler={this.createChangeHandler(\"name\")}/>\r\n            </TableCell>\r\n            {rows.map(\r\n              row => (\r\n                <TableCell\r\n                  key={row.id}\r\n                  align=\"center\"\r\n                  padding={row.disablePadding ? 'none' : 'default'}\r\n                >\r\n                    <label>\r\n                      {row.label}\r\n                    </label>\r\n                </TableCell>\r\n              ),\r\n              this,\r\n            )}\r\n          </TableRow>\r\n        </TableHead>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default EnhancedTableHead;","import React from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nclass TablePaginationCustom extends React.Component {\r\n\r\n    constructor(props) {\r\n     super(props);\r\n     this.MaterialPagination = TablePagination;\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.props.store.setState({\r\n            currentPage: page\r\n          });\r\n      };\r\n    \r\n      handleChangeRowsPerPage = event => {\r\n        const rowsPerPage = event.target.value;\r\n        this.props.store.setState({\r\n          rowsPerPage: rowsPerPage,\r\n        });\r\n      };\r\n\r\n  render() {\r\n    const page = this.props.store.currentPage;\r\n    const rowsPerPage = this.props.store.rowsCount;\r\n    const count = this.props.store.state.pokemonsCount;\r\n\r\n      return (<this.MaterialPagination\r\n        rowsPerPageOptions={[10, 20, 50]}\r\n        component=\"div\"\r\n        count={count}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          'aria-label': 'Previous Page',\r\n        }}\r\n        nextIconButtonProps={{\r\n          'aria-label': 'Next Page',\r\n        }}\r\n        onChangePage={this.handleChangePage}\r\n        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n      />);\r\n  }\r\n}\r\n\r\nexport default inject('store')(observer(TablePaginationCustom));\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst TABLE_TITLE = `POKEMONS LIST`;\r\n\r\nconst toolbarStyles = theme => ({\r\n    root: {\r\n      paddingRight: theme.spacing.unit,\r\n    },\r\n    spacer: {\r\n      flex: '1 1 100%',\r\n    },\r\n    title: {\r\n      flex: '0 0 auto',\r\n    },\r\n  });\r\n  \r\n  let EnhancedTableToolbar = props => {\r\n    const { classes } = props;\r\n  \r\n    return (\r\n      <Toolbar\r\n        className={classes.root}\r\n      >\r\n      <div className={classes.title}>\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n              {TABLE_TITLE}\r\n            </Typography>\r\n        </div>\r\n        <div  className={classes.spacer}/>\r\n      </Toolbar>\r\n    );\r\n  };\r\n  \r\n  EnhancedTableToolbar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n  \r\n  export default withStyles(toolbarStyles)(EnhancedTableToolbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TypeTag extends React.Component {\r\n  render() {\r\n      return <div key={this.props.name + this.props.id} style={{ color: this.props.color }}>{this.props.name}</div>\r\n  }\r\n}\r\n\r\nTypeTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TypeTag;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TypeTag from './type-tag.js';\r\nimport { inject } from 'mobx-react';\r\n\r\nconst STATS_SEQUENCE = ['hp', 'attack', 'defense', 'special-attack', 'special-defense', 'speed', 'accuracy', 'evasion']\r\n\r\nclass Pokemon extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        dataLoaded: false,\r\n        data: {}\r\n      }\r\n  }\r\n\r\n  dataCells(isLoaded) {\r\n    if (isLoaded) {\r\n      return (<React.Fragment>\r\n        <TableCell align=\"left\">\r\n        <Avatar alt=\"img\" src={this.state.data.avatar} />\r\n        </TableCell>\r\n        {STATS_SEQUENCE.map((stat) => {\r\n          return <TableCell key={this.state.data.id + stat} align=\"right\">{this.state.data[stat]}</TableCell>\r\n        })}\r\n        <TableCell align=\"right\">\r\n        {this.state.data.types.map((type) => {\r\n          return <TypeTag key={this.state.data.id + type.name[0]} name={type.name[0]} color={type.color} id={this.state.data.id + type.name[0]} />\r\n        })}\r\n        </TableCell>\r\n        </React.Fragment>\r\n    );\r\n    }\r\n    return false;   \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.item !== prevProps.item) {\r\n      this.props.store.getPokemonData(this.item)\r\n    .then((data) => {\r\n      this.setState({\r\n        data: data\r\n      })\r\n    })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var self = this;\r\n    this.props.store.getPokemonData(this.item)\r\n    .then((data) => {\r\n      self.setState({\r\n        dataLoaded: true,\r\n        data: data\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n      this.item = this.props.item;\r\n\r\n      return (<React.Fragment>\r\n        <TableCell component=\"th\" scope=\"row\" padding=\"default\">\r\n          {this.item.name}\r\n        </TableCell>\r\n        {this.dataCells(this.state.dataLoaded)}\r\n        </React.Fragment>)\r\n  }\r\n}\r\n\r\nPokemon.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default inject('store')(Pokemon);\r\n","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Pokemon from '../pokemon';\r\n\r\nclass PokemonsTable extends React.Component {\r\n   render() {\r\n      return <React.Fragment>\r\n           <TableBody >\r\n                {this.props.store.displayList.slice().map((pokemon, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                    >\r\n                      <Pokemon item={pokemon} />\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n      </React.Fragment>\r\n  }\r\n}\r\nexport default (inject('store')(observer(PokemonsTable)))\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import DevTools from 'mobx-react-devtools'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CheckboxLabels from '../checkbox-labels'\r\nimport EnhancedTableHead from './table-header';\r\nimport TablePaginationCustom from './table-pagination';\r\nimport EnhancedTableToolbar from './table-toolbar';\r\nimport PokemonsTable from './table-body';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    marginLeft: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    minWidth: 1200,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\n\r\nclass PokemonsBoard extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        {/* <div className={\"MuiTableCell-root-109 MuiTableCell-body-111\"}>\r\n           <DevTools />\r\n        </div> */}\r\n        <EnhancedTableToolbar />\r\n        <div className={classes.title}>\r\n        <CheckboxLabels />\r\n        </div>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead />\r\n            <PokemonsTable />\r\n          </Table>\r\n        </div>\r\n        <TablePaginationCustom />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nPokemonsBoard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PokemonsBoard);\r\n","const STATS_SEQUENCE = ['hp', 'attack', 'defense', 'special-attack', 'special-defense', 'speed', 'accuracy', 'evasion']\r\nconst TYPES_MAP = new Map([\r\n    [\"normal\" , \"Silver\"], \r\n    [\"fighting\" , \"YellowGreen\"],\r\n    [\"flying\" , \"Fuchsia\"],\r\n    [\"poison\" , \"Purple\"],\r\n    [\"ground\" , \"Red\"],\r\n    [\"rock\" , \"Maroon\"],\r\n    [\"bug\" , \"Yellow\"],\r\n    [\"ghost\" , \"Olive\"],\r\n    [\"steel\" , \"Lime\"],\r\n    [\"fire\"  , \"Green\"],\r\n    [\"water\"  , \"Aqua\"],\r\n    [\"grass\"  , \"Teal\"],\r\n    [\"electric\"  , \"Blue\"],\r\n    [\"psychic\"  , \"Navy\"],\r\n    [\"ice\"  , \"Chocolate\"],\r\n    [\"dragon\"  , \"DarkGoldenRod\"],\r\n    [\"dark\"  , \"DarkSlateBlue\"],\r\n    [\"fairy\"  , \"OrangeRed\"],\r\n    [\"unknown\" , \"DarkSlateGray\"],\r\n    [\"shadow\" , \"Gray\"]\r\n]);\r\n\r\nclass DataParser {\r\n    constructor(data) {\r\n      this.id = String(data.id) || 0;\r\n      this.name = String(data.name) || '';\r\n      STATS_SEQUENCE.forEach((stat) => {\r\n        const dataStat = data.stats.find((it) => {\r\n         return it.stat.name === stat;\r\n      });\r\n      this[stat] = dataStat ? dataStat[`base_stat`] : 0;\r\n    });\r\n      this.types = this.setTypes(data.types);\r\n      this.avatar = String(data.avatar) || ''; \r\n    }\r\n\r\n    setTypes(types) {\r\n       return types.map((it, index) => {\r\n         return {name: [it.type.name], color: TYPES_MAP.get(it.type.name) || `red`}\r\n       })\r\n    }\r\n  \r\n    static parsePokemon(data) {\r\n      return new DataParser(data);\r\n    }\r\n  \r\n    static parsePokemons(array) {\r\n      const data = array.map((it) => {\r\n        return DataParser.parsePokemon(it);\r\n      }) || '';\r\n      return data;\r\n    };\r\n  }\r\n  \r\n  export default DataParser;","import Pocedex from 'pokedex-promise-v2';\r\n\r\nconst P = new Pocedex();\r\n\r\nclass Api {\r\n    constructor() {\r\n       this.P = P;\r\n    }\r\n\r\n    getTypes() {\r\n        return this.P.getTypesList()\r\n        .catch((e) => {\r\n           console.log(e);\r\n        }); \r\n    }\r\n\r\n    getTypePokemons(url) {\r\n        return this.P.resource(url)\r\n        .catch((e) => {\r\n           console.log(e);\r\n        }); \r\n    }\r\n\r\n    \r\n    getPokemonsList() {\r\n        return this.P.getPokemonsList()\r\n        .catch((e) => {\r\n           console.log(e);\r\n        }); \r\n    }\r\n\r\n    getPokemons() {\r\n        return this.P.resource('/api/v2/pokemon/')\r\n        .catch((e) => {\r\n           console.log(e);\r\n        }); \r\n    }\r\n\r\n    getPokemonData(url) {\r\n        if (url) {\r\n            return this.P.resource(url)\r\n        }\r\n        return new Error(`url is not valid`);\r\n    }\r\n}\r\n\r\nexport default new Api();","import { observable, computed, decorate, action } from 'mobx'; // observable, computed, action, decorate \r\n\r\nimport {createFilter} from 'react-search-input'\r\nimport arrayLodash from 'lodash/array';\r\nimport collection from 'lodash/collection';\r\n\r\nimport DataParcer from '../services/data-parcer';\r\nimport api from '../services/Api';\r\n\r\nconst INIT_ROWS_PER_PAGE = 10;\r\nconst INIT_PAGE = 0;\r\n\r\nconst TYPES_URL = \"https://pokeapi.co/api/v2/type/\";\r\n\r\nclass Store {\r\n  screenPokemons;\r\n  pokemonsList;\r\n  state;\r\n\r\n  get exportPokemonsData() {\r\n    const _filterByTerm = (list) => {\r\n      return list.filter(createFilter(this.state.term, \"name\"))\r\n    }\r\n    const filtredPokimons = _filterByTerm(this.pokemonsList);\r\n    return filtredPokimons;\r\n  }\r\n\r\n  get tagFilterEnabled() {\r\n    return this.state.pokemonsList;\r\n  }\r\n\r\n  get currentTagsLists() {\r\n    const result = this.state.selectedTags.map((it) => {\r\n      return this.tagsStore[it];\r\n    })\r\n    return result ? result : [];\r\n  }\r\n\r\n  get displayList() {\r\n    Promise.resolve(this.exportPokemonsData)\r\n    .then((array) => {\r\n      this.tableListLength(array.length);\r\n    })\r\n    return this._spliceToTablePage(this.exportPokemonsData);\r\n  }\r\n\r\n  get rowsCount() {\r\n    return this.state.rowsPerPage;\r\n  }\r\n\r\n  get currentPage() {\r\n    return this.state.currentPage;\r\n  }\r\n\r\n  get pokemonsLength() {\r\n    return this.state.pokemonsCount;\r\n  }\r\n\r\n  get offset() {\r\n    return this.state.currentPage * this.state.rowsPerPage;\r\n  }\r\n\r\n  tableListLength(count) {\r\n    this.setState({pokemonsCount: count})\r\n  }\r\n\r\n  set searchTerm(newTerm) {\r\n    this.setState({term: newTerm});\r\n  }\r\n\r\n  set page(count) {\r\n    this.setState({currentPage: count});\r\n  }\r\n\r\n  pokemons(list) {\r\n    this.pokemonsList = list.splice(0);\r\n  }\r\n\r\n  setTagsList(array) {\r\n    this.tagsStore = array;\r\n  }\r\n\r\n  setState(state) {\r\n    for (let property of Object.keys(state)) {\r\n      this.state[property] = state[property];\r\n    }\r\n  }\r\n\r\n  filterTags(tag) {\r\n    const tags = this.state.selectedTags.slice();\r\n    const newTagIndex = tags.indexOf(tag);\r\n    if (newTagIndex === -1) {\r\n       tags.push(tag);\r\n    } else {\r\n       tags.splice(newTagIndex, 1);\r\n    }\r\n    return tags;\r\n }\r\n\r\n  constructor() {\r\n    this.tagsList = [];\r\n    this.pokemonsList = [];\r\n    this.screenPokemons = [];\r\n    this.state = {\r\n      term: '',\r\n      selectedTags: [],\r\n      pokemonsTagsSelected: [],\r\n      // orderBy: \"name\",\r\n      // order: \"asc\",\r\n      pokemonsCount: INIT_PAGE,\r\n      pokemonsList: 'init',\r\n      currentPage: INIT_PAGE, \r\n      rowsPerPage: INIT_ROWS_PER_PAGE,\r\n    };\r\n    this._init();\r\n}\r\n\r\n  _filterByTags(name) {\r\n    const selectedTags = this.filterTags(name);\r\n    this.setState({'selectedTags': selectedTags})\r\n    if (selectedTags.length > 0) {\r\n        const tagList = this.state.selectedTags.map((it) => {\r\n          return this.tagsStore[it];\r\n        });\r\n        this.getPromiseList(tagList)\r\n        .then(this.onTagsLists, this.onErrorList);\r\n    } else {\r\n      this.pokemons(this.screenPokemons.slice());\r\n    }\r\n  }\r\n\r\n  onTagsLists(lists) {\r\n      const pokemons = lists.map((list) => {\r\n      return (list.map((response) => {\r\n        return response.pokemon;\r\n      }));\r\n    });\r\n    const filtredByTagsPokemons = this._comparePokemonsLists(pokemons);\r\n    this.pokemons(filtredByTagsPokemons); \r\n  }\r\n\r\n  onErrorList(error) {\r\n    this.pokemons([]);\r\n    console.log(error)\r\n  }\r\n  \r\n  _setPokimonsByTags(tags) {\r\n    const pokemonsLists = {};\r\n    tags.forEach((tag) => {\r\n      pokemonsLists[tag.name] = this._loadPokemonsWithTag(tag.url) \r\n   });\r\n   this.setTagsList(pokemonsLists)\r\n  }\r\n\r\n  getPromiseList(arrayPromises) {\r\n    return Promise.all(arrayPromises);\r\n  }\r\n\r\n  _comparePokemonsLists(pokemonsByTags) {\r\n    if (pokemonsByTags.length > 1) {\r\n      const count = pokemonsByTags.length;\r\n      const sortedAllPokemons = collection.sortBy([].concat(...pokemonsByTags), [function (o) {return o.name}]); \r\n      let pokemons = arrayLodash.sortedUniqBy(arrayLodash.compact(sortedAllPokemons.map((item,_index,array) => {\r\n        return array.filter((it) => {\r\n          return it.name === item.name;\r\n        }).length === count ? item : '';\r\n      })), (o) => o.name);\r\n      return pokemons;\r\n    }\r\n  return pokemonsByTags[0];\r\n}\r\n\r\n  loadPokemonData({name, url}) {\r\n    return api.getPokemonData(url)\r\n    .then((pokemonData) => {\r\n      const currentPokemonData = {\r\n        id: pokemonData.id,\r\n        name: name,\r\n        avatar: pokemonData.sprites.front_default,\r\n        stats: pokemonData.stats,\r\n        types: pokemonData.types,\r\n        url: url\r\n      }\r\n      return DataParcer.parsePokemon(currentPokemonData);\r\n    })\r\n    .catch(e => {console.log(e)})\r\n  }\r\n\r\n  getPokemonData(item) {\r\n    return this.loadPokemonData(item);\r\n}\r\n\r\n  _init() {\r\n    this._loadTypesList()\r\n    .then((response) => {\r\n        this.tagsList = response.results;\r\n        return response.results;\r\n    })\r\n    .then((tags) => {\r\n       this._setPokimonsByTags(tags)\r\n    });\r\n    this._loadPokemonsList()\r\n    .then(this._onSuccessPokemons, this._onErrorPokemons);\r\n  }\r\n\r\n  _onSuccessPokemons(response) {\r\n    this.screenPokemons = Array.from(response.results).slice();\r\n    this.pokemons(response.results);\r\n    this.setState({pokemonsList: 'done'})\r\n    this.tableListLength(response.results.length);\r\n    return response.results;\r\n  }\r\n\r\n  _onErrorPokemons(error) {\r\n    this.setState({pokemonsList: 'error'})\r\n    console.log(error);\r\n    return []\r\n  }\r\n\r\n  _spliceToTablePage(list) {\r\n    return Array.from(list).slice(0).splice(this.offset, this.state.rowsPerPage);\r\n  }\r\n\r\n  _loadPokemonsWithTag(url) {\r\n    return api.getTypePokemons(url)\r\n    .then((response) => {\r\n        return response.pokemon;\r\n      })\r\n  }\r\n\r\n  _loadTypesList() {\r\n    return api.getTypes(TYPES_URL)\r\n    .catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  _loadPokemonsList() {\r\n    return api.getPokemonsList()\r\n  }\r\n\r\n  _loadPokemonsData(list) {\r\n    const pokemonsWithData = list.map((item, index) => {\r\n      const storedData = this.storedPokemons.filter((stroredPokemon) => {return stroredPokemon.url === item.url});\r\n      if (storedData.length === 1) {\r\n        return storedData[0];\r\n      }\r\n      return this.loadPokemonData(item);\r\n    })\r\n\r\n    return Promise.all(pokemonsWithData); \r\n  }\r\n}\r\n\r\ndecorate(Store, {\r\n    pokemonsList: observable.ref,\r\n    screenPokemons: observable.ref,\r\n    state: observable,\r\n    currentTagsLists: computed,\r\n    displayList: computed,\r\n    exportPokemonsData: computed,\r\n    tagFilterEnabled: computed,\r\n    rowsCount: computed,\r\n    pokemonsLength: computed,\r\n    currentPage: computed,\r\n    offset: computed,\r\n    setTagsList: action,\r\n    setState: action,\r\n    filterTags: action,\r\n    tableListLength: action,\r\n    _onSuccessPokemons: action.bound,\r\n    _onErrorPokemons: action.bound,\r\n    pokemons: action,\r\n    onTagsLists: action.bound,\r\n    onErrorList: action.bound\r\n    // setSort: action,\r\n    // sortPokemons: computed,\r\n  });\r\n\r\nconst store = new Store();\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\nimport PokemonsBoard from './components/table/table'\nimport { Provider } from 'mobx-react';\nimport store from './stores/app-store';\n\n\nclass App extends React.Component {\n  render() {\n   const stores = {store};\n    return (\n      <Provider {...stores}>\n      <div className=\"App\">\n        <PokemonsBoard />\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}